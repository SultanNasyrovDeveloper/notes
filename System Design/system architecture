Объектно-ориентированное программирование
============================================

Проблемы архитектуры:
----------------------
поиск баланса между множеством разных вариантов решения,
пятью аттрибутами сложной системы, постребностями пользователя

Критерии хорошей системы:
-------------------------
- Эффективность
- Гибкость
- Расширяемость(по началу делать только основные функции с возможностью добавления)
Программные сущности (классы, модули, функции и т.п.) должны быть открытыми для расширения, но закрытыми для модификации.
- Масштабируемость разработки
- Тестируемость
- Возможность повторного использования
- Хорошая структура. Сопровождаемость. Читаемость

5 признаков сложной системы:
----------------------------
- Иерархическая структура
- Относительность выбора элементарных компонентов
- Разделение функций
- Общая структура
- Устойчивые промежуточные формы
	Любая работоспособная сложная система является итогом
	эволюции более простой работоспособной системы

Декомпозиция
-------------

Иерархическая декомпозиция:
--------------------------
Система разбивается на крупные подсистемы(модули)
Модули делятся на подмодули(необязательно)
Объекты(классы)

Совет: Перед тем как выделять объекты разделите систему на смысловые блоки

Проектирование модуля
- какую модуль выполняет задачу
- с какими объектами/ модулями будет работать
- как он будет это делать

Получение объектов:
- модуль создает объекты сам
-


Архитектура программы:
- каждый модуль должен иметь интерфейс для взаимодействия с другими модулями
- подсистемы не должны напрямую обращаться к подсистемам другого модуля



Мысли:
- чем сложнее система, тем она уязвимие
- Сущность системы определяется отношениями между ее частями, а не ее частями как таковыми
